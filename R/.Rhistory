?acf
?acf
nld <- readRDS("~/autocorr_project/model_fits/nieuwland_with_residuals.rds")
nld
names(nld)
residuals <- nld[["resid"]]
subject <- nld[["subject"]]
acf_subj <- function(data, subject, residuals, lag.max = NULL) {
  subj <- rlang::enquo(subject)
  resid <- rlang:enquo(residuals)  
}
acf_subj <- function(data, subject, residuals, lag.max = NULL) {
  subj <- rlang::enquo(subject)
  resid <- rlang:enquo(residuals)
  print(subj)
  print(resid)
}

acf_subj(nld, subject, resid)
acf_subj <- function(data, subject, residuals, lag.max = NULL) {
  subj <- rlang::enquo(subject)
  resid <- rlang::enquo(residuals)
  print(subj)
  print(resid)
}

acf_subj(nld, subject, resid)
pryr::where("split")
acf_subj <- function(data, subject, residuals, lag.max = NULL) {
  subj <- rlang::enquo(subject)
  resid <- rlang::enquo(residuals)
  print(subj)
  print(resid)
  data %>% group_by(!!subj)
}

acf_subj(nld, subject, resid)
library("tidyverse")
data %>% group_by(!!subj)
acf_subj(nld, subject, resid)
acf_subj <- function(data, subject, residuals, lag.max = NULL) {
  subj <- rlang::enquo(subject)
  resid <- rlang::enquo(residuals)
  print(subj)
  print(resid)
  data %>% select(!!subject, !!residuals) %>% group_by(!!subj)
}

acf_subj(nld, subject, resid)
acf_subj <- function(data, subject, residuals, lag.max = NULL) {
  subj <- rlang::enquo(subject)
  resid <- rlang::enquo(residuals)
  print(subj)
  print(resid)
  data %>% select(!!subj, !!resid) %>% group_by(!!subj)
}

acf_subj(nld, subject, resid)
acf_subj <- function(data, subject, residuals, lag.max = NULL) {
  subj <- rlang::enquo(subject)
  resid <- rlang::enquo(residuals)
  print(subj)
  print(resid)
  data %>%
    select(!!subj, !!resid) %>%
    group_by(!!subj) %>%
    nest()
}

acf_subj(nld, subject, resid)
acf_subj <- function(data, subject, residuals, lag.max = NULL) {
  subj <- rlang::enquo(subject)
  resid <- rlang::enquo(residuals)
  print(subj)
  print(resid)
  data %>%
    select(!!subj, !!resid) %>%
    group_by(!!subj) %>%
    nest(.key = "res") %>%
    mutate(acf = map(res, ~ pull(.x, !!resid)))
}

acf_subj(nld, subject, resid)
acf_subj <- function(data, subject, residuals, lag.max = NULL) {
  subj <- rlang::enquo(subject)
  resid <- rlang::enquo(residuals)
  print(subj)
  print(resid)
  data %>%
    select(!!subj, !!resid) %>%
    group_by(!!subj) %>%
    nest(.key = "res") %>%
    mutate(acf = map(res, ~ pull(.x, !!resid)) %>%
             acf(lag.max = lag.max, plot = FALSE))
}

acf_subj(nld, subject, resid)
acf_subj <- function(data, subject, residuals, lag.max = NULL) {
  subj <- rlang::enquo(subject)
  resid <- rlang::enquo(residuals)
  print(subj)
  print(resid)
  data %>%
    select(!!subj, !!resid) %>%
    group_by(!!subj) %>%
    nest(.key = "res") %>%
    mutate(acf = map(res, ~ pull(.x, !!resid)) %>%
             as.numeric(acf(lag.max = lag.max, plot = FALSE)))
}

acf_subj(nld, subject, resid)
acf_subj <- function(data, subject, residuals, lag.max = NULL) {
  subj <- rlang::enquo(subject)
  resid <- rlang::enquo(residuals)
  print(subj)
  print(resid)
  data %>%
    select(!!subj, !!resid) %>%
    group_by(!!subj) %>%
    nest(.key = "res") %>%
    mutate(acf = map(res, ~ pull(.x, !!resid)))
}

acf_subj(nld, subject, resid)
ff <- acf_subj(nld, subject, resid)
map(ff$acf, acf)
map(ff$acf, acf, plot = FALSE)
acf(ff[["acf"]][[1]])
acf(ff[["acf"]][[1]], plot = FALSE)
acf(ff[["acf"]][[1]], plot = FALSE)[[1]]
acf(ff[["acf"]][[1]], plot = FALSE)[[1]][[1]]
acf(ff[["acf"]][[1]], plot = FALSE)[[1]]
dim(acf(ff[["acf"]][[1]], plot = FALSE)[[1]])
c(dim(acf(ff[["acf"]][[1]], plot = FALSE)[[1]]))
c(acf(ff[["acf"]][[1]], plot = FALSE)[[1]])
acf_subj <- function(data, subject, residuals, lag.max = NULL) {
  subj <- rlang::enquo(subject)
  resid <- rlang::enquo(residuals)
  print(subj)
  print(resid)
  data %>%
    select(!!subj, !!resid) %>%
    group_by(!!subj) %>%
    nest(.key = "res") %>%
    mutate(acf = map(res, ~ pull(.x, !!resid) %>%
                            acf(lag.max = lag.max, plot = FALSE) %>%
                            pluck(1) %>% c()))
}

acf_subj(nld, subject, resid)
acf_subj <- function(data, subject, residuals, lag.max = NULL) {
  acf_tbl <- function(x, lag.max) {
    res <- c(acf(lag.max = lag.max, plot = FALSE)[[1]])
    tibble::tibble(lag = seq_along(res), r = res)
  }
  subj <- rlang::enquo(subject)
  resid <- rlang::enquo(residuals)
  print(subj)
  print(resid)
  if (is.null(lag.max)) {
  } else {}
  data %>%
    select(!!subj, !!resid) %>%
    group_by(!!subj) %>%
    nest(.key = "res") %>%
    mutate(acf = purrr::map_df(res, ~ acf_tbl(dplyr::pull(.x, !!resid))))
}
acf_subj(nld, subject, resid)
acf_subj <- function(data, subject, residuals, lag.max = NULL) {
  acf_tbl <- function(x, lag.max) {
    res <- c(acf(lag.max = lag.max, plot = FALSE)[[1]])
    tibble::tibble(lag = seq_along(res), r = res)
  }
  subj <- rlang::enquo(subject)
  resid <- rlang::enquo(residuals)
  print(subj)
  print(resid)
  if (is.null(lag.max)) {
  } else {}
  browser()
  data %>%
    select(!!subj, !!resid) %>%
    group_by(!!subj) %>%
    nest(.key = "res") %>%
    mutate(acf = purrr::map(res, ~ acf_tbl(dplyr::pull(.x, !!resid))))
}
acf_subj(nld, subject, resid)
data
  data %>%
    select(!!subj, !!resid) %>%
    group_by(!!subj) %>%
    nest(.key = "res")
  data %>%
    select(!!subj, !!resid) %>%
    group_by(!!subj) %>%
    nest(.key = "res") %>%
    mutate(acf = purrr::map(res, ~ acf_tbl(dplyr::pull(.x, !!resid))))
  data %>%
    select(!!subj, !!resid) %>%
    group_by(!!subj) %>%
    nest(.key = "res") -> ff
ff
  data %>%
    select(!!subj, !!resid) %>%
    group_by(!!subj) %>%
    nest(.key = "res") %>%
    mutate(acf = purrr::map(res, ~ dplyr::pull(.x, !!resid)))
  data %>%
    select(!!subj, !!resid) %>%
    group_by(!!subj) %>%
    nest(.key = "res") %>%
    mutate(acf = purrr::map(res, ~ dplyr::pull(.x, !!resid))) -> ff
ff
  data %>%
    select(!!subj, !!resid) %>%
    group_by(!!subj) %>%
    nest(.key = "res") %>%
    mutate(acf = purrr::map(res, ~ acf_tbl(dplyr::pull(.x, !!resid),
                                           lag.max)))
acf_tbl(ff[["res"]][[1]], lag.max)
ff[["res"]][[1]]
ff[["res"]][[1]] -> x
res <- c(acf(x, lag.max = lag.max, plot = FALSE)[[1]])
res
tibble::tibble(lag = seq_along(res), r = res)
Q
acf_subj <- function(data, subject, residuals, lag.max = NULL) {
  acf_tbl <- function(x, col, lag.max) {
    vec <- dplyr::pull(x, !!col)
    res <- c(acf(vec, lag.max = lag.max, plot = FALSE)[[1]])
    tibble::tibble(lag = seq_along(res), r = res)
  }
  subj <- rlang::enquo(subject)
  resid <- rlang::enquo(residuals)
  dnest <- data %>%
    select(!!subj, !!resid) %>%
    group_by(!!subj) %>%
    nest(.key = "res")
  dnest %>%
    mutate(acf = purrr::map(res, acf_tbl, resid, lag.max))
}

acf_subj(nld, subject, resid)
acf_subj <- function(data, subject, residuals, lag.max = NULL) {
  acf_tbl <- function(x, col, lag.max) {
    vec <- dplyr::pull(x, !!col)
    res <- c(acf(vec, lag.max = lag.max, plot = FALSE)[[1]])
    tibble::tibble(lag = seq_along(res), r = res)
  }
  subj <- rlang::enquo(subject)
  resid <- rlang::enquo(residuals)
  dnest <- data %>%
    select(!!subj, !!resid) %>%
    group_by(!!subj) %>%
    nest(.key = "res")
  browser()
  firstpass <- dnest %>%
    mutate(acf = purrr::map(res, acf_tbl, resid, lag.max)) %>%
    select(subject, acf) %>%
    unnest()
  if (is.null(lag.max)) {
    max_lag <- max(purrr::map_int(firstpass[["acf"]], nrow))    
}
}
acf_subj(nld, subject, resid)
dnest
firstpass
max_lag
max_lag
max_lag
Q
acf_subj <- function(data, subject, residuals, lag.max = NULL) {
  acf_tbl <- function(x, col, lag.max) {
    vec <- dplyr::pull(x, !!col)
    res <- c(acf(vec, lag.max = lag.max, plot = FALSE)[[1]])
    tibble::tibble(lag = seq_along(res), r = res)
  }
  subj <- rlang::enquo(subject)
  resid <- rlang::enquo(residuals)
  dnest <- data %>%
    select(!!subj, !!resid) %>%
    group_by(!!subj) %>%
    nest(.key = "res")
  acf_df <- dnest %>%
    mutate(acf = purrr::map(res, acf_tbl, resid, lag.max)) %>%
    select(subject, acf) %>%
    unnest()
  if (is.null(lag.max)) {
    max_lag <- acf_df %>%
      group_by(subject) %>%
      summarize(max_lag = max(lag)) %>%
      pull(max_lag) %>% max()
    message("setting lag.max to ", max_lag)
    acf_df <- dnest %>%
      mutate(acf = purrr::map(res, acf_tbl, resid, max_lag)) %>%
      select(subject, acf) %>%
      unnest()
  }
  acf_df
}

acf_subj(nld, subject, resid)
getwd()
setwd("../..")
getwd()
devtools::use_package("tibble", pkg = "autocorr")
devtools::use_package("rlang", pkg = "autocorr")
plyr::where("nest")
pryr::where("nest")
devtools::use_package("tidyr", pkg = "autocorr")
acf_subj <- function(data, subject, residuals, lag.max = NULL) {
  acf_tbl <- function(x, col, lag.max) {
    vec <- dplyr::pull(x, !!col)
    res <- c(acf(vec, lag.max = lag.max, plot = FALSE)[[1]])
    tibble::tibble(lag = seq_along(res), r = res)
  }
  subj <- rlang::enquo(subject)
  resid <- rlang::enquo(residuals)
  dnest <- data %>%
    dplyr::select(!!subj, !!resid) %>%
    dplyr::group_by(!!subj) %>%
    tidyr::nest(.key = "res")
  acf_df <- dnest %>%
    dplyr::mutate(acf = purrr::map(res, acf_tbl, resid, lag.max)) %>%
    dplyr::select(subject, acf) %>%
    tidyr::unnest()
  if (is.null(lag.max)) {
    max_lag <- acf_df %>%
      dplyr::group_by(subject) %>%
      dplyr::summarize(max_lag = max(lag)) %>%
      dplyr::pull(max_lag) %>% max()
    message("setting lag.max to ", max_lag)
    acf_df <- dnest %>%
      dplyr::mutate(acf = purrr::map(res, acf_tbl, resid, max_lag)) %>%
      dplyr::select(subject, acf) %>%
      tidyr::unnest()
  }
  acf_df
}

acf_subj(nld, subject, resid)
?acf
10*log(80, 10)
getwd()
devtools::document("autocorr")
devtools::load_all("autocorr")
q()
n
